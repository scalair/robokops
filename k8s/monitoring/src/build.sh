#!/usr/bin/env bash

# This script generate the manifests/*.yaml files.

set -e
# only exit with zero if all commands of the pipeline exit successfully
set -o pipefail

if [ -f /conf/monitoring/monitoring.conf ]; then
	source /conf/monitoring/monitoring.conf
fi

# Make sure to start with a clean 'manifests' dir
rm -rf manifests
mkdir manifests

if [ ! -z "${BASIC_AUTH_USERNAME}" ] && [ ! -z "${BASIC_AUTH_PASSWORD}" ]; then
	# Generate basic auth credentials
	htpasswd -cb auth ${BASIC_AUTH_USERNAME} ${BASIC_AUTH_PASSWORD}
fi

if [ -f /conf/monitoring/monitoring.conf ]; then
	sempl -s /conf/monitoring/monitoring.conf /conf/monitoring/monitoring.jsonnet monitoring.jsonnet
else
	cp /conf/monitoring/monitoring.jsonnet monitoring.jsonnet
fi

echo "Generating manifests.."
jsonnet -J vendor -m manifests monitoring.jsonnet | xargs -I{} sh -c 'cat {} | gojsontoyaml > {}.yaml; rm -f {}' -- {}

# Customise manifests
# 	This step is already done in the entrypoint.sh, but since the manifests generated by that script
#	don't exist yet when its done, we have to redo it here only for the manifests folder
#	custom-manifests are customised by entrypoint.sh
if [ -d /conf/monitoring ]; then
	echo "Updating generated manifests with custom configurations"
	# Since /conf is a docker volume, we have to copy everything before making changes
	mkdir -p /tmp/monitoring
	cp -r /conf/monitoring/manifests /tmp/monitoring
	for MANIFEST in $(find /tmp/monitoring/manifests/ -name '*.yaml' | sed "s|/tmp/monitoring/||"); do
		if [ -f /home/builder/src/${MANIFEST} ]; then
			if [ -f /conf/monitoring/monitoring.conf ]; then
				echo -e "Templating:\t monitoring/${MANIFEST} with monitoring.conf"
				sempl -s /conf/monitoring/monitoring.conf /tmp/monitoring/${MANIFEST}
			fi
			echo -e "Merging:\t monitoring/${MANIFEST} with /home/builder/src/${MANIFEST}"
			yq m -x -i /home/builder/src/${MANIFEST} /tmp/monitoring/${MANIFEST}
		fi
	done
fi